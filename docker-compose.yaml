version: '3.1'

services:
  netdata:
    restart: always
    hostname: netdata.misitioba.com
    image: netdata/netdata
    container_name: netdata
    cap_add:
      - SYS_PTRACE
    security_opt:
      - apparmor:unconfined
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    ports:
      - 19999:19999
      - 19998:8080
      - 19997:3128
  portainer:
    image: portainer/portainer
    container_name: portainer
    restart: always
    command: -H unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    ports:
      - 9000:9000
  adminer:
   image: adminer
   restart: always
   container_name: adminer
   ports:
      - 19995:8080
   networks:
    - backend
  mysql:
    image: mariadb:10.2.21
    container_name: mysql
    restart: always
    volumes:
      - ./mysql:/var/lib/mysql 
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PWD}
      ## Use % to allow remote access to all addresses. 
      ## Generally not recommended by some people to allow for root.
      MYSQL_ROOT_HOST: '%' 

      # This allows ip ranges from 192.168.0.49 to 192.168.0.54 to connect to root
      #MYSQL_ROOT_HOST: 192.168.0.48/255.255.255.248
    ports:
      - 3306:3306
    networks:
      - backend
  mongo:
    image: mongo
    restart: always
    container_name: mongo-db
    volumes:
     - ./mongo/data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PWD}
    ports:
      - 27017:27017
  mongo-express:
    container_name: mongo-gui
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_ROOT_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_ROOT_PWD}
      ME_CONFIG_BASICAUTH_USERNAME: ${MONGO_ROOT_USERNAME}
      ME_CONFIG_BASICAUTH_PASSWORD: ${MONGO_ROOT_PWD}
volumes:
  portainer_data:
networks:
  backend: